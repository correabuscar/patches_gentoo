running this inside 'mc' aka 'midnight commander':

gentoo $ emerge --info isoinfo

emerge: there are no ebuilds to satisfy "isoinfo".

emerge: searching for similar names...
emerge: Maybe you meant any of these: net-analyzer/sinfo, dev-util/distro-info, sys-process/psinfo?
bash: line 1: 9: Bad file descriptor
^C
====================================
Error in portage.process.run_exitfuncs

  File "/usr/lib64/python3.6/site-packages/portage/process.py", line 189, in run_exitfuncs
    func(*targs, **kargs)
  File "/usr/lib64/python3.6/site-packages/_emerge/actions.py", line 3244, in emergeexit
    xtermTitleReset()
  File "/usr/lib64/python3.6/site-packages/portage/output.py", line 287, in xtermTitleReset
    2: sys.__stderr__.fileno()
  File "/usr/lib64/python3.6/site-packages/portage/process.py", line 430, in spawn
    retval = os.waitpid(pid, 0)[1]
  File "/usr/lib64/python3.6/site-packages/portage/__init__.py", line 325, in __call__
    rval = self._func(*args, **kwargs)
====================================

Error in atexit._run_exitfuncs:
Traceback (most recent call last):
  File "/usr/lib64/python3.6/site-packages/portage/process.py", line 189, in run_exitfuncs
    func(*targs, **kargs)
  File "/usr/lib64/python3.6/site-packages/_emerge/actions.py", line 3244, in emergeexit
    xtermTitleReset()
  File "/usr/lib64/python3.6/site-packages/portage/output.py", line 287, in xtermTitleReset
    2: sys.__stderr__.fileno()
  File "/usr/lib64/python3.6/site-packages/portage/process.py", line 430, in spawn
    retval = os.waitpid(pid, 0)[1]
  File "/usr/lib64/python3.6/site-packages/portage/__init__.py", line 325, in __call__
    rval = self._func(*args, **kwargs)
KeyboardInterrupt
Press any key to continue...

because 'mc' sets $PROMPT_COMMAND while inside subshell to:
$ echo $PROMPT_COMMAND
echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/~}\007" pwd>&9;kill -STOP $$

and for wtw reason, portage executes the value of $PROMPT_COMMAND as a command in a new subshell.

that prompt thing was added to 'mc' on:
commit bf1ff69fb8066ced89fc8b41484dc00f917934fd
Date:   Mon Sep 2 19:38:29 2013 +0300

freenode #gentoo-portage
 <dwfreed> You can put 'notitles' in FEATURES to avoid the execution

diff --git a/lib/portage/output.py b/lib/portage/output.py
index 1070d0ef3..6d9aa66c1 100644
--- a/lib/portage/output.py
+++ b/lib/portage/output.py
@@ -270,25 +270,25 @@ def xtermTitleReset():
 		prompt_command = os.environ.get('PROMPT_COMMAND')
 		if prompt_command == "":
 			default_xterm_title = ""
-		elif prompt_command is not None:
-			if dotitles and \
-				'TERM' in os.environ and \
-				_legal_terms_re.match(os.environ['TERM']) is not None and \
-				sys.__stderr__.isatty():
-				from portage.process import find_binary, spawn
-				shell = os.environ.get("SHELL")
-				if not shell or not os.access(shell, os.EX_OK):
-					shell = find_binary("sh")
-				if shell:
-					spawn([shell, "-c", prompt_command], env=os.environ,
-						fd_pipes={
-							0: portage._get_stdin().fileno(),
-							1: sys.__stderr__.fileno(),
-							2: sys.__stderr__.fileno()
-						})
-				else:
-					os.system(prompt_command)
-			return
+		#elif prompt_command is not None:
+		#	if dotitles and \
+		#		'TERM' in os.environ and \
+		#		_legal_terms_re.match(os.environ['TERM']) is not None and \
+		#		sys.__stderr__.isatty():
+		#		from portage.process import find_binary, spawn
+		#		shell = os.environ.get("SHELL")
+		#		if not shell or not os.access(shell, os.EX_OK):
+		#			shell = find_binary("sh")
+		#		if shell:
+		#			spawn([shell, "-c", prompt_command], env=os.environ,
+		#				fd_pipes={
+		#					0: portage._get_stdin().fileno(),
+		#					1: sys.__stderr__.fileno(),
+		#					2: sys.__stderr__.fileno()
+		#				})
+		#		else:
+		#			os.system(prompt_command)
+		#	return
 		else:
 			pwd = os.environ.get('PWD','')
 			home = os.environ.get('HOME', '')
