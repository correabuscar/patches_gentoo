#
# /etc/pacman.conf
#
# See the pacman.conf(5) manpage for option and repository directives

#
# GENERAL OPTIONS
#
[options]
# The following paths are commented out with their default values listed.
# If you wish to use different paths, uncomment and update the paths.
#RootDir     = /
#DBPath      = /var/lib/pacman/
CacheDir = /var/cache/pacman/pkg/
#LogFile     = /var/log/pacman.log
#GPGDir      = /etc/pacman.d/gnupg/
#HookDir     = /etc/pacman.d/hooks/
HoldPkg     = pacman glibc iproute2 linux-git fakechroot fakeroot
#XXX: fakeroot is needed when compiling pacman-git for tests to not fail in mass!
#pacman-git
# If upgrades are available for these packages they will be asked for first
SyncFirst    =  archlinux-keyring
#not anymore: manjaro-keyring manjaro-system
#XXX: ^ only valid on Manjaro (well, added the patch on Arch myself)! see: https://github.com/manjaro/packages-core/blob/master/pacman/pacman-sync-first-option.patch
#added patch on archlinux so SyncFirst is valid now!

#XferCommand = /usr/bin/curl -C - -f %u > %o
#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u
#CleanMethod = KeepInstalled
#UseDelta    = 0.7
Architecture = auto

# Pacman won't upgrade packages listed in IgnorePkg and members of IgnoreGroup
#IgnorePkg   = iproute2 virtualbox virtualbox-host-dkms rxvt-unicode-better-wheel-scrolling linux-git pacman dkms
IgnorePkg   = virtualbox rxvt-unicode-better-wheel-scrolling linux-git pacman pacman-git firefox-hg chromium-dev pacman-contrib vte linux-api-headers rsync ccache linux-api-headers grub chromium pepper-flash breeze-gtk
#keeping the broken local/breeze-gtk 5.16.5-1 because I want the grey window title for inactive windows... hmm... wait, maybe it doesn't even use breeze(since it's not in the list in this version - fixed in next tho) so maybe it used Adwaita still?!

#chromium package is here so that I can manually install it and then run ~/bin/modify_chromium_exe
#xorg-server xorg-server-common xorg-server-devel xorg-server-xvfb xf86-video-ati
#XXX: 29 jan 2018, grub is in ignored because after it gets installed you need to re-install the kernel package which patches /usr/share/grub/grub-mkconfig_lib to ensure linux-git kernel is first in the list! patch is inside ~/bin/update-grub script!
#19 jan 2018, rsync good vs bad (3.1.2-8 => 3.1.3pre1-1) ; also bad: 3.1.3-1
#03 april 2017, linux-api-headers in ignore so it doesn't get updated from core/ because it's noW part of linux-git packages!
#pacman-git doesn't exist in pacman -Ss but you can never be too sure!
#02 march 2017, removed iproute2 from IgnorePkg because there's no reason to built it ourselves(because that patch is already upsteam!)
#pacman-git
IgnoreGroup = builtbydaddy
#^ src: https://wiki.archlinux.org/index.php/Arch_Build_System#Preserve_modified_packages

#NoUpgrade   =
#NoExtract   =

# Misc options
UseSyslog
Color
TotalDownload
# We cannot check disk space from within a chroot environment
CheckSpace
VerbosePkgLists

# By default, pacman accepts packages signed by keys that its local keyring
# trusts (see pacman-key and its man page), as well as unsigned packages.
SigLevel    = Required TrustedOnly DatabaseOptional DatabaseTrustedOnly PackageRequired PackageTrustedOnly
LocalFileSigLevel = Optional
#RemoteFileSigLevel = Required

# NOTE: You must run `pacman-key --init` before first using pacman; the local
# keyring can then be populated with the keys of all official Manjaro Linux
# packagers with `pacman-key --populate archlinux`
# not: manjaro`.

#
# REPOSITORIES
#   - can be defined here or included from another file
#   - pacman will search repositories in the order defined here
#   - local/custom mirrors can be added here or in separate files
#   - repositories listed first will take precedence when packages
#     have identical names, regardless of version number
#   - URLs will have $repo replaced by the name of the current repo
#   - URLs will have $arch replaced by the name of the architecture
#
# Repository entries are of the format:
#       [repo-name]
#       Server = ServerName
#       Include = IncludePath
#
# The header [repo-name] is crucial - it must be present and
# uncommented to enable the repo.
#

# The testing repositories are disabled by default. To enable, uncomment the
# repo name header and Include lines. You can add preferred servers immediately
# after the header, and they will be used before the default mirrors.

#[testing]
#Include = /etc/pacman.d/mirrorlist

[core]
SigLevel = Required TrustedOnly DatabaseOptional DatabaseTrustedOnly PackageRequired PackageTrustedOnly
Include = /etc/pacman.d/mirrorlist

[extra]
SigLevel = Required TrustedOnly DatabaseOptional DatabaseTrustedOnly PackageRequired PackageTrustedOnly
Include = /etc/pacman.d/mirrorlist

#[community-testing]
#Include = /etc/pacman.d/mirrorlist

[community]
SigLevel = Required TrustedOnly DatabaseOptional DatabaseTrustedOnly PackageRequired PackageTrustedOnly
Include = /etc/pacman.d/mirrorlist

# If you want to run 32 bit applications on your x86_64 system,
# enable the multilib repositories as required here.

#[multilib-testing]
#Include = /etc/pacman.d/mirrorlist

#multilib needed to build dev86-git and virtualbox! and dev86(non-git) is there!
[multilib]
SigLevel = Required TrustedOnly DatabaseOptional DatabaseTrustedOnly PackageRequired PackageTrustedOnly
Include = /etc/pacman.d/mirrorlist

# An example of a custom package repository.  See the pacman manpage for
# tips on creating your own repositories.
#[custom]
#SigLevel = Optional TrustAll
#Server = file:///home/custompkgs

