diff --git a/src/filemanager/cmd.c b/src/filemanager/cmd.c
index 9fe726705..0ea2027ff 100644
--- a/src/filemanager/cmd.c
+++ b/src/filemanager/cmd.c
@@ -214,12 +214,17 @@ compare_files (const vfs_path_t * vpath1, const vfs_path_t * vpath2, off_t size)
     if (size == 0)
         return 0;
 
-    file1 = open (vfs_path_as_str (vpath1), O_RDONLY);
+    // https://midnight-commander.org/ticket/3983#comment:7
+    file1 = open (vfs_path_as_str (vpath1), O_RDONLY 
+| O_NOFOLLOW  //FIXME: comparing symlinks is broken as it compares only size-of-symlink bytes of the contents of the file that the symlink points to! Also SIGBUS error if pointee file is 0 bytes. So with O_NOFOLLOW all symlinks will show as different (even if same dir in both panels and same symlink compared to itself!)
+        );
     if (file1 >= 0)
     {
         int file2;
 
-        file2 = open (vfs_path_as_str (vpath2), O_RDONLY);
+        file2 = open (vfs_path_as_str (vpath2), O_RDONLY
+            | O_NOFOLLOW //FIXME: same as above.
+            );
         if (file2 >= 0)
         {
 #ifdef HAVE_MMAP
@@ -235,6 +240,7 @@ compare_files (const vfs_path_t * vpath1, const vfs_path_t * vpath2, off_t size)
                 if (data2 != (char *) -1)
                 {
                     rotate_dash (TRUE);
+                    //printf("!! size=%jd vpath1=%s vpath2=%s\n",size, vfs_path_as_str(vpath1), vfs_path_as_str(vpath2));
                     result = memcmp (data1, data2, size);
                     munmap (data2, size);
                 }
