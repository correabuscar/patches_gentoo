the patch got in 2.0.1 (wasn't in 2.0.0) but I did some nit changes and I wanna preserve them for no reason :)
otherwise the patch is not needed anymore and can be avoided!

this patch is by an actual dev. tsujan from here: https://github.com/lxqt/qterminal/issues/1143#issuecomment-2189138026
which fixes the issue properly.
issue was: replacement char aka ï¿½ in group of 3 would sometimes appear in `btop`

slightly modified/pedantic to remove implicits

locally testing lives in /home/user/sandbox/terminal/qterminal/replacement_char

This applied on 2.0.0:
#diff -ruNp qtermwidget-orig/lib/Emulation.cpp qtermwidget/lib/Emulation.cpp
#--- qtermwidget-orig/lib/Emulation.cpp
#+++ qtermwidget/lib/Emulation.cpp
#@@ -52,7 +52,7 @@ Emulation::Emulation() :
#   _keyTranslator(nullptr),
#   _usesMouse(false),
#   _bracketedPasteMode(false),
#-  _fromUtf8(QStringEncoder::Utf16)
#+  _toUtf16(QStringConverter::Utf8, QStringConverter::Flag::Default)
# {
#   // create screens with a default size
#   _screen[0] = new Screen(40,80);
#@@ -224,9 +224,9 @@ void Emulation::receiveData(const char*
#      * U+10FFFF
#      * https://unicodebook.readthedocs.io/unicode_encodings.html#surrogates
#      */
#-    QString str = QString::fromUtf8(text, length);
#-    auto encoded = _fromUtf8(str);
#-    std::wstring unicodeText = encoded.data.toStdWString(); 
#+    const QByteArray ba(text, length);
#+    const QString str = _toUtf16.decode(ba);
#+    const std::wstring unicodeText = str.toStdWString();
# 
#     //send characters to terminal emulator
#     for (size_t i=0;i<unicodeText.length();i++)
#diff -ruNp qtermwidget-orig/lib/Emulation.h qtermwidget/lib/Emulation.h
#--- qtermwidget-orig/lib/Emulation.h
#+++ qtermwidget/lib/Emulation.h
#@@ -494,7 +494,7 @@ private:
#   bool _bracketedPasteMode;
#   QTimer _bulkTimer1{this};
#   QTimer _bulkTimer2{this};
#-  QStringEncoder _fromUtf8;
#+  QStringDecoder _toUtf16;
# };
# 
# }

This is what got in 2.0.1:
#diff --git a/lib/Emulation.cpp b/lib/Emulation.cpp
#index c88ac12a..966797f1 100644
#--- a/lib/Emulation.cpp
#+++ b/lib/Emulation.cpp
#@@ -52,7 +52,7 @@ Emulation::Emulation() :
#   _keyTranslator(nullptr),
#   _usesMouse(false),
#   _bracketedPasteMode(false),
#-  _fromUtf8(QStringEncoder::Utf16)
#+  _toUtf16(QStringConverter::Utf8)
# {
#   // create screens with a default size
#   _screen[0] = new Screen(40,80);
#@@ -224,9 +224,9 @@ void Emulation::receiveData(const char* text, int length)
#      * U+10FFFF
#      * https://unicodebook.readthedocs.io/unicode_encodings.html#surrogates
#      */
#-    QString str = QString::fromUtf8(text, length);
#-    auto encoded = _fromUtf8(str);
#-    std::wstring unicodeText = encoded.data.toStdWString(); 
#+    QByteArray ba(text, length);
#+    QString str = _toUtf16(ba);
#+    std::wstring unicodeText = str.toStdWString();
# 
#     //send characters to terminal emulator
#     for (size_t i=0;i<unicodeText.length();i++)
#diff --git a/lib/Emulation.h b/lib/Emulation.h
#index 98ba2fe1..db747bcc 100644
#--- a/lib/Emulation.h
#+++ b/lib/Emulation.h
#@@ -31,7 +31,7 @@
# //#include <QPointer>
# #include <QTextStream>
# #include <QTimer>
#-#include <QStringEncoder>
#+#include <QStringDecoder>
# 
# #include "qtermwidget_export.h"
# #include "KeyboardTranslator.h"
#@@ -494,7 +494,7 @@ private slots:
#   bool _bracketedPasteMode;
#   QTimer _bulkTimer1{this};
#   QTimer _bulkTimer2{this};
#-  QStringEncoder _fromUtf8;
#+  QStringDecoder _toUtf16;
# };
# 
# }

And this is what's different from what I nit-ed:
Index: /var/tmp/portage/x11-libs/qtermwidget-2.0.0/work/qtermwidget-2.0.0/lib/Emulation.cpp
===================================================================
--- .orig/var/tmp/portage/x11-libs/qtermwidget-2.0.0/work/qtermwidget-2.0.0/lib/Emulation.cpp
+++ qtermwidget-2.0.0/lib/Emulation.cpp
@@ -52,7 +52,7 @@ Emulation::Emulation() :
   _keyTranslator(nullptr),
   _usesMouse(false),
   _bracketedPasteMode(false),
-  _toUtf16(QStringConverter::Utf8)
+  _toUtf16(QStringConverter::Utf8, QStringConverter::Flag::Default)
 {
   // create screens with a default size
   _screen[0] = new Screen(40,80);
@@ -224,9 +224,9 @@ void Emulation::receiveData(const char*
      * U+10FFFF
      * https://unicodebook.readthedocs.io/unicode_encodings.html#surrogates
      */
-    QByteArray ba(text, length);
-    QString str = _toUtf16(ba);
-    std::wstring unicodeText = str.toStdWString();
+    const QByteArray ba(text, length);
+    const QString str = _toUtf16.decode(ba);
+    const std::wstring unicodeText = str.toStdWString();
 
     //send characters to terminal emulator
     for (size_t i=0;i<unicodeText.length();i++)
