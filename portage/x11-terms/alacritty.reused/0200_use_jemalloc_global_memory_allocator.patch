this uses more mem and VIRT too, than the normal one!, so skipping it as
it's not better then the System one
From a9190a6970593adf8c9acef34f646fa0dfabd06f Mon Sep 17 00:00:00 2001
From: Jocelyn Turcotte <turcotte.j@gmail.com>
Date: Fri, 15 Apr 2022 23:47:29 +0200
Subject: [PATCH] Use jemalloc to reduce the memory fragmentation with large
 scrollbacks

---
 alacritty/Cargo.toml               | 1 +
 alacritty/src/main.rs              | 5 +++++
 alacritty_terminal/src/grid/row.rs | 2 ++
 3 files changed, 8 insertions(+)

diff --git a/alacritty/Cargo.toml b/alacritty/Cargo.toml
index fd6c19d7..ea501744 100644
--- a/alacritty/Cargo.toml
+++ b/alacritty/Cargo.toml
@@ -39,6 +39,7 @@ unicode-width = "0.1"
 bitflags = "1"
 dirs = "4.0.0"
 once_cell = "1.12"
+tikv-jemallocator = "0.5"
 
 [build-dependencies]
 gl_generator = "0.14.0"
diff --git a/alacritty/src/main.rs b/alacritty/src/main.rs
index 2e7c30a9..77d3e43f 100644
--- a/alacritty/src/main.rs
+++ b/alacritty/src/main.rs
@@ -62,6 +62,11 @@ use crate::event::{Event, Processor};
 #[cfg(target_os = "macos")]
 use crate::macos::locale;
 
+use tikv_jemallocator;
+
+#[global_allocator]
+static ALLOC: tikv_jemallocator::Jemalloc = tikv_jemallocator::Jemalloc;
+
 fn main() -> Result<(), Box<dyn Error>> {
     #[cfg(windows)]
     panic::attach_handler();
diff --git a/alacritty_terminal/src/grid/row.rs b/alacritty_terminal/src/grid/row.rs
index 2a92a78c..aa7e2237 100644
--- a/alacritty_terminal/src/grid/row.rs
+++ b/alacritty_terminal/src/grid/row.rs
@@ -78,6 +78,8 @@ impl<T: Clone + Default> Row<T> {
         let mut new_row = self.inner.split_off(columns);
         let index = new_row.iter().rposition(|c| !c.is_empty()).map_or(0, |i| i + 1);
         new_row.truncate(index);
+        // Reduce the capacity of the left part.
+        self.inner.shrink_to_fit();

         self.occ = min(self.occ, columns);

--
2.34.1
